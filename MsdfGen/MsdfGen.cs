//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class MsdfGen {
  public static void generateSDF(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, SWIGTYPE_p_Projection projection, double range, SWIGTYPE_p_GeneratorConfig config) {
    MsdfGenPINVOKE.generateSDF__SWIG_0(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), SWIGTYPE_p_Projection.getCPtr(projection), range, SWIGTYPE_p_GeneratorConfig.getCPtr(config));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateSDF(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, SWIGTYPE_p_Projection projection, double range) {
    MsdfGenPINVOKE.generateSDF__SWIG_1(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), SWIGTYPE_p_Projection.getCPtr(projection), range);
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generatePseudoSDF(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, SWIGTYPE_p_Projection projection, double range, SWIGTYPE_p_GeneratorConfig config) {
    MsdfGenPINVOKE.generatePseudoSDF__SWIG_0(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), SWIGTYPE_p_Projection.getCPtr(projection), range, SWIGTYPE_p_GeneratorConfig.getCPtr(config));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generatePseudoSDF(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, SWIGTYPE_p_Projection projection, double range) {
    MsdfGenPINVOKE.generatePseudoSDF__SWIG_1(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), SWIGTYPE_p_Projection.getCPtr(projection), range);
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMSDF(SWIGTYPE_p_BitmapRefT_float_3_t output, SWIGTYPE_p_Shape shape, SWIGTYPE_p_Projection projection, double range, SWIGTYPE_p_MSDFGeneratorConfig config) {
    MsdfGenPINVOKE.generateMSDF__SWIG_0(SWIGTYPE_p_BitmapRefT_float_3_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), SWIGTYPE_p_Projection.getCPtr(projection), range, SWIGTYPE_p_MSDFGeneratorConfig.getCPtr(config));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMSDF(SWIGTYPE_p_BitmapRefT_float_3_t output, SWIGTYPE_p_Shape shape, SWIGTYPE_p_Projection projection, double range) {
    MsdfGenPINVOKE.generateMSDF__SWIG_1(SWIGTYPE_p_BitmapRefT_float_3_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), SWIGTYPE_p_Projection.getCPtr(projection), range);
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMTSDF(SWIGTYPE_p_BitmapRefT_float_4_t output, SWIGTYPE_p_Shape shape, SWIGTYPE_p_Projection projection, double range, SWIGTYPE_p_MSDFGeneratorConfig config) {
    MsdfGenPINVOKE.generateMTSDF__SWIG_0(SWIGTYPE_p_BitmapRefT_float_4_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), SWIGTYPE_p_Projection.getCPtr(projection), range, SWIGTYPE_p_MSDFGeneratorConfig.getCPtr(config));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMTSDF(SWIGTYPE_p_BitmapRefT_float_4_t output, SWIGTYPE_p_Shape shape, SWIGTYPE_p_Projection projection, double range) {
    MsdfGenPINVOKE.generateMTSDF__SWIG_1(SWIGTYPE_p_BitmapRefT_float_4_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), SWIGTYPE_p_Projection.getCPtr(projection), range);
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateSDF(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate, bool overlapSupport) {
    MsdfGenPINVOKE.generateSDF__SWIG_2(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate), overlapSupport);
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateSDF(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate) {
    MsdfGenPINVOKE.generateSDF__SWIG_3(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generatePseudoSDF(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate, bool overlapSupport) {
    MsdfGenPINVOKE.generatePseudoSDF__SWIG_2(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate), overlapSupport);
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generatePseudoSDF(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate) {
    MsdfGenPINVOKE.generatePseudoSDF__SWIG_3(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMSDF(SWIGTYPE_p_BitmapRefT_float_3_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate, SWIGTYPE_p_ErrorCorrectionConfig errorCorrectionConfig, bool overlapSupport) {
    MsdfGenPINVOKE.generateMSDF__SWIG_2(SWIGTYPE_p_BitmapRefT_float_3_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate), SWIGTYPE_p_ErrorCorrectionConfig.getCPtr(errorCorrectionConfig), overlapSupport);
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMSDF(SWIGTYPE_p_BitmapRefT_float_3_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate, SWIGTYPE_p_ErrorCorrectionConfig errorCorrectionConfig) {
    MsdfGenPINVOKE.generateMSDF__SWIG_3(SWIGTYPE_p_BitmapRefT_float_3_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate), SWIGTYPE_p_ErrorCorrectionConfig.getCPtr(errorCorrectionConfig));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMSDF(SWIGTYPE_p_BitmapRefT_float_3_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate) {
    MsdfGenPINVOKE.generateMSDF__SWIG_4(SWIGTYPE_p_BitmapRefT_float_3_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMTSDF(SWIGTYPE_p_BitmapRefT_float_4_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate, SWIGTYPE_p_ErrorCorrectionConfig errorCorrectionConfig, bool overlapSupport) {
    MsdfGenPINVOKE.generateMTSDF__SWIG_2(SWIGTYPE_p_BitmapRefT_float_4_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate), SWIGTYPE_p_ErrorCorrectionConfig.getCPtr(errorCorrectionConfig), overlapSupport);
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMTSDF(SWIGTYPE_p_BitmapRefT_float_4_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate, SWIGTYPE_p_ErrorCorrectionConfig errorCorrectionConfig) {
    MsdfGenPINVOKE.generateMTSDF__SWIG_3(SWIGTYPE_p_BitmapRefT_float_4_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate), SWIGTYPE_p_ErrorCorrectionConfig.getCPtr(errorCorrectionConfig));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMTSDF(SWIGTYPE_p_BitmapRefT_float_4_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate) {
    MsdfGenPINVOKE.generateMTSDF__SWIG_4(SWIGTYPE_p_BitmapRefT_float_4_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateSDF_legacy(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate) {
    MsdfGenPINVOKE.generateSDF_legacy(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generatePseudoSDF_legacy(SWIGTYPE_p_BitmapRefT_float_1_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate) {
    MsdfGenPINVOKE.generatePseudoSDF_legacy(SWIGTYPE_p_BitmapRefT_float_1_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMSDF_legacy(SWIGTYPE_p_BitmapRefT_float_3_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate, SWIGTYPE_p_ErrorCorrectionConfig errorCorrectionConfig) {
    MsdfGenPINVOKE.generateMSDF_legacy__SWIG_0(SWIGTYPE_p_BitmapRefT_float_3_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate), SWIGTYPE_p_ErrorCorrectionConfig.getCPtr(errorCorrectionConfig));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMSDF_legacy(SWIGTYPE_p_BitmapRefT_float_3_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate) {
    MsdfGenPINVOKE.generateMSDF_legacy__SWIG_1(SWIGTYPE_p_BitmapRefT_float_3_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMTSDF_legacy(SWIGTYPE_p_BitmapRefT_float_4_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate, SWIGTYPE_p_ErrorCorrectionConfig errorCorrectionConfig) {
    MsdfGenPINVOKE.generateMTSDF_legacy__SWIG_0(SWIGTYPE_p_BitmapRefT_float_4_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate), SWIGTYPE_p_ErrorCorrectionConfig.getCPtr(errorCorrectionConfig));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void generateMTSDF_legacy(SWIGTYPE_p_BitmapRefT_float_4_t output, SWIGTYPE_p_Shape shape, double range, SWIGTYPE_p_Vector2 scale, SWIGTYPE_p_Vector2 translate) {
    MsdfGenPINVOKE.generateMTSDF_legacy__SWIG_1(SWIGTYPE_p_BitmapRefT_float_4_t.getCPtr(output), SWIGTYPE_p_Shape.getCPtr(shape), range, SWIGTYPE_p_Vector2.getCPtr(scale), SWIGTYPE_p_Vector2.getCPtr(translate));
    if (MsdfGenPINVOKE.SWIGPendingException.Pending) throw MsdfGenPINVOKE.SWIGPendingException.Retrieve();
  }

}
